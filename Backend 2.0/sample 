exports.login = catchAsync(async (req, res, next) => {
  const { email, password } = req.body;

  if (!email || !password) {
    return next(new AppError('Please provide email and password', 400));
  }

  let admin = await Admin.findOne({ email });
  if (!admin) {
    return next(new AppError('User does not exist', 400));
  }

  const isPasswordMatch = await bcrypt.compare(password, admin.password);
  if (!isPasswordMatch) {
    return next(new AppError('Incorrect email or password', 400));
  }

  const tokenData = {
    adminId: admin._id,
  };
  const token = await jwt.sign(tokenData, process.env.SECRET_KEY, {
    expiresIn: "1d",
  });

  admin = {
    _id: admin._id,
    fullname: admin.fullname,
    email: admin.email,
    phoneNumber: admin.phoneNumber

  };

  return res.status(200)
    .cookie("token", token, {
      maxAge: 1 * 24 * 60 * 60 * 1000,
      httpsOnly: true,
      sameSite: "strict",
    })
    .json({
      message: `Welcome back ${admin.fullname}`,
      admin,
      success: true,
    });
    next()
});